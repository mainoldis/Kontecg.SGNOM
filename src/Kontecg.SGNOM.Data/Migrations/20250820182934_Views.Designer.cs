// <auto-generated />
using System;
using Kontecg.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kontecg.Migrations
{
    [DbContext(typeof(SGNOMDbContext))]
    [Migration("20250820182934_Views")]
    partial class Views
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("sgnom")
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kontecg.Accounting.AccountingDocumentSummary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("AmountReservedForHoliday")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("IncomeTaxes")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Payment")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PaymentPlus")
                        .HasColumnType("decimal(10,2)");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ReservedForHoliday")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<decimal>("Retentions")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("SocialSecurityTaxes")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId", "PersonId", "CompanyId", "GroupId");

                    b.ToTable("accounting_document_summaries", "cnt");
                });

            modelBuilder.Entity("Kontecg.Accounting.AccountingTaxSummary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("TaxType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId", "PersonId", "CompanyId", "GroupId");

                    b.ToTable("accounting_tax_summaries", "cnt");
                });

            modelBuilder.Entity("Kontecg.Adjustments.AdjustmentDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("ContributeForCompanySocialSecurityTaxes")
                        .HasColumnType("int");

                    b.Property<int>("ContributeForCompanyWorkforceTaxes")
                        .HasColumnType("int");

                    b.Property<int>("ContributeForIncomeTaxes")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("ProcessOn")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("SumAmountForHolidayHistogram")
                        .HasColumnType("bit");

                    b.Property<bool>("SumAmountForPaymentHistogram")
                        .HasColumnType("bit");

                    b.Property<bool>("SumAmountForSocialSecurity")
                        .HasColumnType("bit");

                    b.Property<bool>("SumHoursForHolidayHistogram")
                        .HasColumnType("bit");

                    b.Property<bool>("SumHoursForPaymentHistogram")
                        .HasColumnType("bit");

                    b.Property<bool>("SumHoursForSocialSecurity")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId", "Code");

                    b.ToTable("adjustment_definitions", "aju");
                });

            modelBuilder.Entity("Kontecg.Adjustments.AdjustmentDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("AdjustmentDefinitionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("AmountReservedForHoliday")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("CenterCost")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DocumentDefinitionId")
                        .HasColumnType("int");

                    b.Property<long>("EmploymentId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("HoursReservedForHoliday")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<DateTime>("MadeOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<int>("Review")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("AdjustmentDefinitionId");

                    b.HasIndex("Code");

                    b.HasIndex("EmploymentId");

                    b.HasIndex("PersonId", "CompanyId", "DocumentDefinitionId", "AdjustmentDefinitionId");

                    b.ToTable("adjustment_documents", "aju");
                });

            modelBuilder.Entity("Kontecg.Adjustments.AdjustmentDocumentTransition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AdjustmentDocumentId")
                        .HasColumnType("bigint");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("AdjustmentDocumentId");

                    b.HasIndex("CompanyId", "AdjustmentDocumentId", "DocumentId");

                    b.ToTable("adjustment_document_transitions", "aju");
                });

            modelBuilder.Entity("Kontecg.Claims.ClaimDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("DocumentDefinitionId")
                        .HasColumnType("int");

                    b.Property<long>("EmploymentId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("MadeOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<int>("Review")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("EmploymentId");

                    b.HasIndex("PersonId", "CompanyId", "DocumentDefinitionId");

                    b.ToTable("claim_documents", "rec");
                });

            modelBuilder.Entity("Kontecg.HistoricalData.HolidayHistogram", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<int>("DocumentDefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Hours")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Since")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId", "PersonId", "GroupId");

                    b.ToTable("holiday_histogram", "vac");
                });

            modelBuilder.Entity("Kontecg.HistoricalData.PaymentHistogram", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("BonusPaymentReceived")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("CertifiedDays")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<int>("DocumentDefinitionId")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Holidays")
                        .HasColumnType("int");

                    b.Property<decimal>("HolidaysPaymentReceived")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Observation")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("SalaryPaymentReceived")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("SalaryPlusPaymentReceived")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("SickLeaveDays")
                        .HasColumnType("int");

                    b.Property<decimal>("SickLeavePaymentReceived")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("Since")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Until")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkedDays")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId", "PersonId", "Year", "Month");

                    b.ToTable("payment_histogram", "sal");
                });

            modelBuilder.Entity("Kontecg.Holidays.HolidayDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<int>("DocumentDefinitionId")
                        .HasColumnType("int");

                    b.Property<long>("EmploymentId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Hours")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<DateTime>("MadeOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RatePerDay")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<DateTime>("Return")
                        .HasColumnType("datetime2");

                    b.Property<int>("Review")
                        .HasColumnType("int");

                    b.Property<DateTime>("Since")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmploymentId");

                    b.HasIndex("DocumentDefinitionId", "PersonId", "EmploymentId", "CompanyId");

                    b.ToTable("holiday_documents", "vac");
                });

            modelBuilder.Entity("Kontecg.Holidays.HolidayNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<long>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Hours")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Since")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId", "CompanyId", "PeriodId");

                    b.ToTable("holiday_notes", "vac");
                });

            modelBuilder.Entity("Kontecg.Holidays.HolidayNoteTransition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<long>("HolidayNoteId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("HolidayNoteId");

                    b.HasIndex("CompanyId", "HolidayNoteId", "DocumentId");

                    b.ToTable("holiday_note_transitions", "vac");
                });

            modelBuilder.Entity("Kontecg.HumanResources.DegreeDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("DisplayName")
                        .IsUnique();

                    b.ToTable("degree_definitions", "gen");
                });

            modelBuilder.Entity("Kontecg.HumanResources.DriverLicenseDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("DisplayName")
                        .IsUnique();

                    b.ToTable("driver_license_definitions", "gen");
                });

            modelBuilder.Entity("Kontecg.HumanResources.LawPenaltyCauseDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Legal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DisplayName")
                        .IsUnique();

                    b.ToTable("law_penalty_cause_definitions", "gen");
                });

            modelBuilder.Entity("Kontecg.HumanResources.LawPenaltyDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<TimeSpan?>("Rehab")
                        .HasColumnType("time");

                    b.Property<bool>("Severe")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DisplayName")
                        .IsUnique();

                    b.ToTable("law_penalty_definitions", "gen");
                });

            modelBuilder.Entity("Kontecg.HumanResources.MilitaryLocationDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("DisplayName")
                        .IsUnique();

                    b.ToTable("military_location_definitions", "gen");
                });

            modelBuilder.Entity("Kontecg.HumanResources.PersonAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber")
                        .IsUnique();

                    b.HasIndex("PersonId");

                    b.ToTable("person_accounts", "docs");
                });

            modelBuilder.Entity("Kontecg.HumanResources.PersonBackgroundTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Hours")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<byte>("Kind")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId", "PersonId", "GroupId", "Year", "Key");

                    b.ToTable("person_background_times", "docs");
                });

            modelBuilder.Entity("Kontecg.HumanResources.PersonDriverLicense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("DriverLicenseDefinitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EffectiveSince")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveUntil")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastEvaluation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DriverLicenseDefinitionId");

                    b.ToTable("person_driver_licenses", "docs");
                });

            modelBuilder.Entity("Kontecg.HumanResources.PersonFamilyRelationship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Cohabits")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<long>("PersonOnRelationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("person_family_relationships", "docs");
                });

            modelBuilder.Entity("Kontecg.HumanResources.PersonHolidaySchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AprilFirstFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("AprilFirstFortnightDaysOff")
                        .HasColumnType("int");

                    b.Property<int>("AprilSecondFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("AprilSecondFortnightDaysOf")
                        .HasColumnType("int");

                    b.Property<int>("AugustFirstFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("AugustFirstFortnightDaysOff")
                        .HasColumnType("int");

                    b.Property<int>("AugustSecondFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("AugustSecondFortnightDaysOf")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("DecemberFirstFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("DecemberFirstFortnightDaysOff")
                        .HasColumnType("int");

                    b.Property<int>("DecemberSecondFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("DecemberSecondFortnightDaysOf")
                        .HasColumnType("int");

                    b.Property<int>("FebruaryFirstFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("FebruaryFirstFortnightDaysOff")
                        .HasColumnType("int");

                    b.Property<int>("FebruarySecondFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("FebruarySecondFortnightDaysOf")
                        .HasColumnType("int");

                    b.Property<int>("JanuaryFirstFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("JanuaryFirstFortnightDaysOff")
                        .HasColumnType("int");

                    b.Property<int>("JanuarySecondFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("JanuarySecondFortnightDaysOf")
                        .HasColumnType("int");

                    b.Property<int>("JulyFirstFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("JulyFirstFortnightDaysOff")
                        .HasColumnType("int");

                    b.Property<int>("JulySecondFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("JulySecondFortnightDaysOf")
                        .HasColumnType("int");

                    b.Property<int>("JuneFirstFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("JuneFirstFortnightDaysOff")
                        .HasColumnType("int");

                    b.Property<int>("JuneSecondFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("JuneSecondFortnightDaysOf")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("MarchFirstFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("MarchFirstFortnightDaysOff")
                        .HasColumnType("int");

                    b.Property<int>("MarchSecondFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("MarchSecondFortnightDaysOf")
                        .HasColumnType("int");

                    b.Property<int>("MayFirstFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("MayFirstFortnightDaysOff")
                        .HasColumnType("int");

                    b.Property<int>("MaySecondFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("MaySecondFortnightDaysOf")
                        .HasColumnType("int");

                    b.Property<int>("NovemberFirstFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("NovemberFirstFortnightDaysOff")
                        .HasColumnType("int");

                    b.Property<int>("NovemberSecondFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("NovemberSecondFortnightDaysOf")
                        .HasColumnType("int");

                    b.Property<int>("OctoberFirstFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("OctoberFirstFortnightDaysOff")
                        .HasColumnType("int");

                    b.Property<int>("OctoberSecondFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("OctoberSecondFortnightDaysOf")
                        .HasColumnType("int");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<int>("SeptemberFirstFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("SeptemberFirstFortnightDaysOff")
                        .HasColumnType("int");

                    b.Property<int>("SeptemberSecondFortnightCalendarDays")
                        .HasColumnType("int");

                    b.Property<int?>("SeptemberSecondFortnightDaysOf")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId", "Year")
                        .IsUnique();

                    b.ToTable("person_holiday_schedules", "docs");
                });

            modelBuilder.Entity("Kontecg.HumanResources.PersonLawPenalty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CauseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("LawPenaltyDefinitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Notification")
                        .HasColumnType("datetime2");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Rehab")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Since")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.HasIndex("LawPenaltyDefinitionId");

                    b.ToTable("person_law_penalties", "docs");
                });

            modelBuilder.Entity("Kontecg.HumanResources.PersonMilitaryRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CompletedActiveMilitaryService")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<bool>("SuitableForMilitaryService")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("person_military_records", "docs");
                });

            modelBuilder.Entity("Kontecg.HumanResources.PersonScholarship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DegreeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Graduation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<int>("ScholarshipLevelId")
                        .HasColumnType("int");

                    b.Property<string>("StudyCenter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DegreeId");

                    b.HasIndex("ScholarshipLevelId");

                    b.ToTable("person_scholarships", "docs");
                });

            modelBuilder.Entity("Kontecg.HumanResources.PersonTax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("Factor")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<string>("Formula")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("MathType")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("TaxType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId", "PersonId", "GroupId");

                    b.ToTable("person_taxes", "docs");
                });

            modelBuilder.Entity("Kontecg.HumanResources.ScholarshipLevelDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Scope")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.HasKey("Id");

                    b.ToTable("scholarship_level_definitions", "gen");
                });

            modelBuilder.Entity("Kontecg.Identity.SignOnDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("DocumentDefinitionId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasMaxLength(192)
                        .HasColumnType("nvarchar(192)");

                    b.Property<string>("IdentityCard")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("Owner")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId", "Code", "IdentityCard");

                    b.ToTable("sign_on_documents", "docs");
                });

            modelBuilder.Entity("Kontecg.Model.PersonAccountView", b =>
                {
                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("IdentityCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vw_persons_accounts", "ext");
                });

            modelBuilder.Entity("Kontecg.Organizations.ComplexityGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("complexity_groups", "est");
                });

            modelBuilder.Entity("Kontecg.Organizations.Occupation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ResponsibilityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ResponsibilityId");

                    b.ToTable("occupations", "est");
                });

            modelBuilder.Entity("Kontecg.Organizations.OccupationalCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("occupational_categories", "est");
                });

            modelBuilder.Entity("Kontecg.Organizations.OrganizationUnitAncestor", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Kind")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("WorkPlacePaymentCode")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Kontecg.Organizations.QualificationRequirementDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OccupationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OccupationId");

                    b.ToTable("qualification_requirement_definitions", "est");
                });

            modelBuilder.Entity("Kontecg.Organizations.Responsibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NormalizedDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("responsibility_levels", "est");
                });

            modelBuilder.Entity("Kontecg.Organizations.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Approved")
                        .HasColumnType("int");

                    b.Property<int>("CenterCost")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<byte>("EmployeeSalaryForm")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("OccupationId")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationUnitCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<long>("OrganizationUnitId")
                        .HasColumnType("bigint");

                    b.Property<int>("Proposals")
                        .HasColumnType("int");

                    b.Property<int?>("ScholarshipLevelId")
                        .HasColumnType("int");

                    b.Property<string>("WorkShift")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("OccupationId");

                    b.HasIndex("ScholarshipLevelId");

                    b.HasIndex("CompanyId", "DocumentId", "OccupationId", "ScholarshipLevelId", "OrganizationUnitId");

                    b.ToTable("templates", "est");
                });

            modelBuilder.Entity("Kontecg.Organizations.TemplateDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("DocumentDefinitionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("MadeById")
                        .HasColumnType("int");

                    b.Property<DateTime>("MadeOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Review")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("MadeById");

                    b.HasIndex("DocumentDefinitionId", "CompanyId");

                    b.ToTable("template_documents", "est");
                });

            modelBuilder.Entity("Kontecg.Organizations.TemplateJobPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ByAssignment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("ByOfficial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("CenterCost")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<byte>("EmployeeSalaryForm")
                        .HasColumnType("tinyint");

                    b.Property<int>("OccupationId")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationUnitCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<long>("OrganizationUnitId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ScholarshipLevelId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<long?>("TemporalDocumentId")
                        .HasColumnType("bigint");

                    b.Property<int>("WorkShiftId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("OccupationId");

                    b.HasIndex("ScholarshipLevelId");

                    b.HasIndex("TemplateId");

                    b.HasIndex("TemporalDocumentId");

                    b.HasIndex("WorkShiftId");

                    b.HasIndex("CompanyId", "TemplateId");

                    b.HasIndex("CompanyId", "TemplateId", "OccupationId", "ScholarshipLevelId", "OrganizationUnitId");

                    b.ToTable("template_job_positions", "est");
                });

            modelBuilder.Entity("Kontecg.Retentions.RetentionDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Auto")
                        .HasColumnType("bit");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Credit")
                        .HasColumnType("bit");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("MathType")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("Partial")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RefundDefinitionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxAmortization")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<bool>("Total")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RefundDefinitionId");

                    b.HasIndex("Code", "CompanyId")
                        .IsUnique();

                    b.ToTable("retention_definitions", "ret");
                });

            modelBuilder.Entity("Kontecg.Retentions.RetentionDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amortization")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<int>("DocumentDefinitionId")
                        .HasColumnType("int");

                    b.Property<bool>("Finished")
                        .HasColumnType("bit");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("LastAmortization")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("MadeOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentTerms")
                        .HasColumnType("int");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<int>("RetentionDefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("Review")
                        .HasColumnType("int");

                    b.Property<decimal>("Surcharge")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("RetentionDefinitionId");

                    b.HasIndex("PersonId", "CompanyId", "DocumentDefinitionId", "RetentionDefinitionId");

                    b.ToTable("retention_documents", "ret");
                });

            modelBuilder.Entity("Kontecg.Salary.Incident", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("Annotation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmploymentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Hours")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Tight")
                        .HasColumnType("bit");

                    b.HasKey("Id", "Start", "PersonId");

                    b.ToTable("incidents", "sal");
                });

            modelBuilder.Entity("Kontecg.Salary.PaymentDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Absence")
                        .HasColumnType("bit");

                    b.Property<int>("AverageMonths")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("ContributeForCompanySocialSecurityTaxes")
                        .HasColumnType("int");

                    b.Property<int>("ContributeForCompanyWorkforceTaxes")
                        .HasColumnType("int");

                    b.Property<int>("ContributeForIncomeTaxes")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Factor")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<string>("Formula")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIncident")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWageGuarantee")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("LongTerm")
                        .HasColumnType("bit");

                    b.Property<string>("MathType")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Observation")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<byte>("PaymentSystem")
                        .HasColumnType("tinyint");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("SalaryForm")
                        .HasColumnType("tinyint");

                    b.Property<bool>("SumAmountForHolidayHistogram")
                        .HasColumnType("bit");

                    b.Property<bool>("SumAmountForPaymentHistogram")
                        .HasColumnType("bit");

                    b.Property<bool>("SumAmountForSocialSecurity")
                        .HasColumnType("bit");

                    b.Property<bool>("SumHoursForHolidayHistogram")
                        .HasColumnType("bit");

                    b.Property<bool>("SumHoursForPaymentHistogram")
                        .HasColumnType("bit");

                    b.Property<bool>("SumHoursForSocialSecurity")
                        .HasColumnType("bit");

                    b.Property<string>("Symbol")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("WageAdjuster")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id");

                    b.ToTable("payment_definitions", "sal");
                });

            modelBuilder.Entity("Kontecg.Salary.PlusDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("ContributeForCompanySocialSecurityTaxes")
                        .HasColumnType("int");

                    b.Property<int>("ContributeForCompanyWorkforceTaxes")
                        .HasColumnType("int");

                    b.Property<int>("ContributeForIncomeTaxes")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("SumAmountForHolidayHistogram")
                        .HasColumnType("bit");

                    b.Property<bool>("SumAmountForPaymentHistogram")
                        .HasColumnType("bit");

                    b.Property<bool>("SumAmountForSocialSecurity")
                        .HasColumnType("bit");

                    b.Property<bool>("SumHoursForHolidayHistogram")
                        .HasColumnType("bit");

                    b.Property<bool>("SumHoursForPaymentHistogram")
                        .HasColumnType("bit");

                    b.Property<bool>("SumHoursForSocialSecurity")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("plus_definitions", "sal");
                });

            modelBuilder.Entity("Kontecg.Salary.TimeDistribution", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("AmountReservedForHoliday")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("CenterCost")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<long>("EmploymentId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Hours")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("PaymentDefinitionId")
                        .HasColumnType("int");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("RatePerHour")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<decimal?>("ReservedForHoliday")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("EmploymentId");

                    b.HasIndex("PaymentDefinitionId");

                    b.HasIndex("DocumentId", "PersonId", "EmploymentId", "CompanyId");

                    b.ToTable("time_distributions", "sal");
                });

            modelBuilder.Entity("Kontecg.Salary.TimeDistributionDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DocumentDefinitionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("MadeOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeriodId")
                        .HasColumnType("int");

                    b.Property<int>("Review")
                        .HasColumnType("int");

                    b.Property<DateTime>("Since")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Until")
                        .HasColumnType("datetime2");

                    b.Property<long>("WorkPlacePaymentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DocumentDefinitionId", "CompanyId", "PeriodId");

                    b.ToTable("time_distribution_documents", "sal");
                });

            modelBuilder.Entity("Kontecg.Salary.TimeDistributionPlus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("AmountReservedForHoliday")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<long>("EmploymentPlusId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("RatePerHour")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<decimal?>("ReservedForHoliday")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("TimeDistributionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmploymentPlusId");

                    b.HasIndex("TimeDistributionId", "EmploymentPlusId", "CompanyId");

                    b.ToTable("time_distribution_pluses", "sal");
                });

            modelBuilder.Entity("Kontecg.SocialSecurity.SubsidyDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("AverageAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<int>("DeseaseDays")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<int>("DocumentDefinitionId")
                        .HasColumnType("int");

                    b.Property<long>("EmploymentId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("MadeOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Percent")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PreviousId")
                        .HasColumnType("bigint");

                    b.Property<int>("Review")
                        .HasColumnType("int");

                    b.Property<DateTime>("Since")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubsidizedDays")
                        .HasColumnType("int");

                    b.Property<int>("SubsidyPaymentDefinitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmploymentId");

                    b.HasIndex("PreviousId");

                    b.HasIndex("SubsidyPaymentDefinitionId");

                    b.HasIndex("DocumentDefinitionId", "PersonId", "EmploymentId", "CompanyId");

                    b.ToTable("subsidy_documents", "sub");

                    b.HasDiscriminator().HasValue("SubsidyDocument");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Kontecg.SocialSecurity.SubsidyNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("AmountReservedForHoliday")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("CUP");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<long>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Hours")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PeriodId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ReservedForHoliday")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<DateTime>("Since")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId", "CompanyId", "PeriodId");

                    b.ToTable("subsidy_notes", "sub");
                });

            modelBuilder.Entity("Kontecg.SocialSecurity.SubsidyNoteTransition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("SubsidyNoteId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SubsidyNoteId");

                    b.HasIndex("CompanyId", "SubsidyNoteId", "DocumentId");

                    b.ToTable("subsidy_note_transitions", "sub");
                });

            modelBuilder.Entity("Kontecg.SocialSecurity.SubsidyPaymentDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePercent")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("PaymentDefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessOn")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Symbol")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentDefinitionId");

                    b.ToTable("subsidy_payment_definitions", "sub");
                });

            modelBuilder.Entity("Kontecg.Timing.WorkRegime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("DaysScheduling")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LegalName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SpecialGroup")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TimeScheduling")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.ToTable("work_regimens", "gen");
                });

            modelBuilder.Entity("Kontecg.Timing.WorkShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AverageHoursPerShift")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HoursWorking")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Legal")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RegimeId")
                        .HasColumnType("int");

                    b.Property<string>("RestingTimesPerShift")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VisualOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegimeId");

                    b.ToTable("work_shifts", "gen");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.EmploymentDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<bool>("ByAssignment")
                        .HasColumnType("bit");

                    b.Property<bool>("ByOfficial")
                        .HasColumnType("bit");

                    b.Property<int>("CenterCost")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ComplexityGroup")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Contract")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ContractSubType")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("DocumentDefinitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EffectiveSince")
                        .HasColumnType("datetime2");

                    b.Property<byte>("EmployeeSalaryForm")
                        .HasColumnType("tinyint");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraSummary")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FirstLevelCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("FirstLevelDisplayName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasSalary")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("LegalNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MadeById")
                        .HasColumnType("int");

                    b.Property<DateTime>("MadeOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("OccupationCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("OccupationCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<long>("OrganizationUnitId")
                        .HasColumnType("bigint");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PreviousId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RatePerHour")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<string>("Responsibility")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Review")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewedById")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("SecondLevelCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SecondLevelDisplayName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SubType")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("SummaryId")
                        .HasColumnType("int");

                    b.Property<string>("ThirdLevelCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("ThirdLevelDisplayName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("TotalSalary")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("WorkPlacePaymentCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("WorkShiftId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("MadeById");

                    b.HasIndex("PreviousId");

                    b.HasIndex("ReviewedById");

                    b.HasIndex("SummaryId");

                    b.HasIndex("WorkShiftId");

                    b.HasIndex("PersonId", "CompanyId", "DocumentDefinitionId");

                    b.ToTable("employment_documents", "rel");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.EmploymentDocumentToGenerate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("CenterCost")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EffectiveSince")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("EmployeeSalaryForm")
                        .HasColumnType("tinyint");

                    b.Property<long>("EmploymentDocumentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraSummary")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("LegalChangeType")
                        .HasColumnType("int");

                    b.Property<long?>("NextEmploymentDocumentId")
                        .HasColumnType("bigint");

                    b.Property<string>("OccupationCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<long?>("OrganizationUnitId")
                        .HasColumnType("bigint");

                    b.Property<string>("SubType")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int?>("SummaryId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("WorkShiftId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NextEmploymentDocumentId");

                    b.HasIndex("EmploymentDocumentId", "CompanyId");

                    b.ToTable("employment_documents_to_generate", "rel");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.EmploymentIndex", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Contract")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Note")
                        .HasMaxLength(195)
                        .HasColumnType("nvarchar(195)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId", "Exp")
                        .IsUnique();

                    b.ToTable("employment_indexes", "rel");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.EmploymentPlus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmploymentId")
                        .HasColumnType("bigint");

                    b.Property<int>("PlusDefinitionId")
                        .HasColumnType("int");

                    b.Property<decimal>("RatePerHour")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.HasKey("Id");

                    b.HasIndex("EmploymentId");

                    b.HasIndex("PlusDefinitionId");

                    b.ToTable("employment_pluses", "rel");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.EmploymentProvisionalAncestor", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PreviousId")
                        .HasColumnType("bigint");

                    b.Property<string>("SubType")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Kontecg.WorkRelations.EmploymentSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acronym")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Classification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("Fluctuation")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("employment_summaries", "rel");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.PerformanceDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("DocumentDefinitionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("MadeOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeriodId")
                        .HasColumnType("int");

                    b.Property<int>("Review")
                        .HasColumnType("int");

                    b.Property<DateTime>("Since")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentDefinitionId", "CompanyId", "PeriodId");

                    b.ToTable("performance_documents", "rel");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.PerformanceEvaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<long>("EmploymentId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Evaluation")
                        .HasPrecision(28, 24)
                        .HasColumnType("decimal(28,24)");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<int?>("SummaryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmploymentId");

                    b.HasIndex("SummaryId");

                    b.HasIndex("DocumentId", "PersonId", "EmploymentId", "CompanyId");

                    b.ToTable("performance_evaluations", "rel");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.PerformanceEvaluationLawPenalty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("EvaluationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("LawPenaltyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationId");

                    b.HasIndex("LawPenaltyId");

                    b.HasIndex("CompanyId", "EvaluationId", "LawPenaltyId");

                    b.ToTable("performance_evaluation_law_penalties", "rel");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.PerformanceSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("performance_summaries", "rel");
                });

            modelBuilder.Entity("Kontecg.SocialSecurity.Maternity", b =>
                {
                    b.HasBaseType("Kontecg.SocialSecurity.SubsidyDocument");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MultiplePregnancy")
                        .HasColumnType("bit");

                    b.ToTable("subsidy_documents", "sub");

                    b.HasDiscriminator().HasValue("Maternity");
                });

            modelBuilder.Entity("Kontecg.SocialSecurity.PartialDisability", b =>
                {
                    b.HasBaseType("Kontecg.SocialSecurity.SubsidyDocument");

                    b.Property<decimal>("FixedAmountPerMonth")
                        .HasColumnType("decimal(10,2)");

                    b.ToTable("subsidy_documents", "sub");

                    b.HasDiscriminator().HasValue("PartialDisability");
                });

            modelBuilder.Entity("Kontecg.SocialSecurity.TemporalDisability", b =>
                {
                    b.HasBaseType("Kontecg.SocialSecurity.SubsidyDocument");

                    b.Property<int>("Detail")
                        .HasColumnType("int");

                    b.Property<bool>("Hospitalized")
                        .HasColumnType("bit");

                    b.Property<int>("MedicalExpertise")
                        .HasColumnType("int");

                    b.Property<int>("WaitingPeriodDays")
                        .HasColumnType("int");

                    b.ToTable("subsidy_documents", "sub");

                    b.HasDiscriminator().HasValue("TemporalDisability");
                });

            modelBuilder.Entity("Kontecg.Adjustments.AdjustmentDocument", b =>
                {
                    b.HasOne("Kontecg.Adjustments.AdjustmentDefinition", "AdjustmentDefinition")
                        .WithMany()
                        .HasForeignKey("AdjustmentDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.WorkRelations.EmploymentDocument", "EmploymentDocument")
                        .WithMany()
                        .HasForeignKey("EmploymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AdjustmentDefinition");

                    b.Navigation("EmploymentDocument");
                });

            modelBuilder.Entity("Kontecg.Adjustments.AdjustmentDocumentTransition", b =>
                {
                    b.HasOne("Kontecg.Adjustments.AdjustmentDocument", "AdjustmentDocument")
                        .WithMany()
                        .HasForeignKey("AdjustmentDocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AdjustmentDocument");
                });

            modelBuilder.Entity("Kontecg.Claims.ClaimDocument", b =>
                {
                    b.HasOne("Kontecg.WorkRelations.EmploymentDocument", "EmploymentDocument")
                        .WithMany()
                        .HasForeignKey("EmploymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EmploymentDocument");
                });

            modelBuilder.Entity("Kontecg.Holidays.HolidayDocument", b =>
                {
                    b.HasOne("Kontecg.WorkRelations.EmploymentDocument", "EmploymentDocument")
                        .WithMany()
                        .HasForeignKey("EmploymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EmploymentDocument");
                });

            modelBuilder.Entity("Kontecg.Holidays.HolidayNote", b =>
                {
                    b.HasOne("Kontecg.Holidays.HolidayDocument", "Document")
                        .WithMany("Notes")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("Kontecg.Holidays.HolidayNoteTransition", b =>
                {
                    b.HasOne("Kontecg.Holidays.HolidayNote", "HolidayNote")
                        .WithMany()
                        .HasForeignKey("HolidayNoteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HolidayNote");
                });

            modelBuilder.Entity("Kontecg.HumanResources.PersonDriverLicense", b =>
                {
                    b.HasOne("Kontecg.HumanResources.DriverLicenseDefinition", "DriverLicense")
                        .WithMany()
                        .HasForeignKey("DriverLicenseDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DriverLicense");
                });

            modelBuilder.Entity("Kontecg.HumanResources.PersonLawPenalty", b =>
                {
                    b.HasOne("Kontecg.HumanResources.LawPenaltyCauseDefinition", "Cause")
                        .WithMany()
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.HumanResources.LawPenaltyDefinition", "LawPenalty")
                        .WithMany()
                        .HasForeignKey("LawPenaltyDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cause");

                    b.Navigation("LawPenalty");
                });

            modelBuilder.Entity("Kontecg.HumanResources.PersonMilitaryRecord", b =>
                {
                    b.HasOne("Kontecg.HumanResources.MilitaryLocationDefinition", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Kontecg.HumanResources.PersonScholarship", b =>
                {
                    b.HasOne("Kontecg.HumanResources.DegreeDefinition", "Degree")
                        .WithMany()
                        .HasForeignKey("DegreeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Kontecg.HumanResources.ScholarshipLevelDefinition", "ScholarshipLevel")
                        .WithMany()
                        .HasForeignKey("ScholarshipLevelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Degree");

                    b.Navigation("ScholarshipLevel");
                });

            modelBuilder.Entity("Kontecg.Organizations.Occupation", b =>
                {
                    b.HasOne("Kontecg.Organizations.OccupationalCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.Organizations.ComplexityGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.Organizations.Responsibility", "Responsibility")
                        .WithMany()
                        .HasForeignKey("ResponsibilityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Group");

                    b.Navigation("Responsibility");
                });

            modelBuilder.Entity("Kontecg.Organizations.QualificationRequirementDefinition", b =>
                {
                    b.HasOne("Kontecg.Organizations.Occupation", "Occupation")
                        .WithMany("Requirements")
                        .HasForeignKey("OccupationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Occupation");
                });

            modelBuilder.Entity("Kontecg.Organizations.Template", b =>
                {
                    b.HasOne("Kontecg.Organizations.TemplateDocument", "Document")
                        .WithMany("Templates")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.Organizations.Occupation", "Occupation")
                        .WithMany()
                        .HasForeignKey("OccupationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.HumanResources.ScholarshipLevelDefinition", "ScholarshipLevel")
                        .WithMany()
                        .HasForeignKey("ScholarshipLevelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Document");

                    b.Navigation("Occupation");

                    b.Navigation("ScholarshipLevel");
                });

            modelBuilder.Entity("Kontecg.Organizations.TemplateDocument", b =>
                {
                    b.HasOne("Kontecg.Identity.SignOnDocument", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.Identity.SignOnDocument", "MadeBy")
                        .WithMany()
                        .HasForeignKey("MadeById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("MadeBy");
                });

            modelBuilder.Entity("Kontecg.Organizations.TemplateJobPosition", b =>
                {
                    b.HasOne("Kontecg.WorkRelations.EmploymentDocument", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Kontecg.Organizations.Occupation", "Occupation")
                        .WithMany()
                        .HasForeignKey("OccupationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.HumanResources.ScholarshipLevelDefinition", "ScholarshipLevel")
                        .WithMany()
                        .HasForeignKey("ScholarshipLevelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Kontecg.Organizations.Template", "Template")
                        .WithMany("JobPositions")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.WorkRelations.EmploymentDocument", "TemporalDocument")
                        .WithMany()
                        .HasForeignKey("TemporalDocumentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Kontecg.Timing.WorkShift", "WorkShift")
                        .WithMany()
                        .HasForeignKey("WorkShiftId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("Occupation");

                    b.Navigation("ScholarshipLevel");

                    b.Navigation("Template");

                    b.Navigation("TemporalDocument");

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("Kontecg.Retentions.RetentionDefinition", b =>
                {
                    b.HasOne("Kontecg.Adjustments.AdjustmentDefinition", "RefundDefinition")
                        .WithMany()
                        .HasForeignKey("RefundDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("RefundDefinition");
                });

            modelBuilder.Entity("Kontecg.Retentions.RetentionDocument", b =>
                {
                    b.HasOne("Kontecg.Retentions.RetentionDefinition", "RetentionDefinition")
                        .WithMany()
                        .HasForeignKey("RetentionDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RetentionDefinition");
                });

            modelBuilder.Entity("Kontecg.Salary.TimeDistribution", b =>
                {
                    b.HasOne("Kontecg.Salary.TimeDistributionDocument", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.WorkRelations.EmploymentDocument", "Employment")
                        .WithMany()
                        .HasForeignKey("EmploymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.Salary.PaymentDefinition", "PaymentDefinition")
                        .WithMany()
                        .HasForeignKey("PaymentDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("Employment");

                    b.Navigation("PaymentDefinition");
                });

            modelBuilder.Entity("Kontecg.Salary.TimeDistributionPlus", b =>
                {
                    b.HasOne("Kontecg.WorkRelations.EmploymentPlus", "EmploymentPlus")
                        .WithMany()
                        .HasForeignKey("EmploymentPlusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.Salary.TimeDistribution", "TimeDistribution")
                        .WithMany("Plus")
                        .HasForeignKey("TimeDistributionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EmploymentPlus");

                    b.Navigation("TimeDistribution");
                });

            modelBuilder.Entity("Kontecg.SocialSecurity.SubsidyDocument", b =>
                {
                    b.HasOne("Kontecg.WorkRelations.EmploymentDocument", "EmploymentDocument")
                        .WithMany()
                        .HasForeignKey("EmploymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.SocialSecurity.SubsidyDocument", "Previous")
                        .WithMany()
                        .HasForeignKey("PreviousId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Kontecg.SocialSecurity.SubsidyPaymentDefinition", "SubsidyPaymentDefinition")
                        .WithMany()
                        .HasForeignKey("SubsidyPaymentDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EmploymentDocument");

                    b.Navigation("Previous");

                    b.Navigation("SubsidyPaymentDefinition");
                });

            modelBuilder.Entity("Kontecg.SocialSecurity.SubsidyNote", b =>
                {
                    b.HasOne("Kontecg.SocialSecurity.SubsidyDocument", "Document")
                        .WithMany("Notes")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("Kontecg.SocialSecurity.SubsidyNoteTransition", b =>
                {
                    b.HasOne("Kontecg.SocialSecurity.SubsidyNote", "SubsidyNote")
                        .WithMany()
                        .HasForeignKey("SubsidyNoteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SubsidyNote");
                });

            modelBuilder.Entity("Kontecg.SocialSecurity.SubsidyPaymentDefinition", b =>
                {
                    b.HasOne("Kontecg.Salary.PaymentDefinition", "PaymentDefinition")
                        .WithMany()
                        .HasForeignKey("PaymentDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PaymentDefinition");
                });

            modelBuilder.Entity("Kontecg.Timing.WorkShift", b =>
                {
                    b.HasOne("Kontecg.Timing.WorkRegime", "Regime")
                        .WithMany()
                        .HasForeignKey("RegimeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Regime");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.EmploymentDocument", b =>
                {
                    b.HasOne("Kontecg.Identity.SignOnDocument", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Kontecg.Identity.SignOnDocument", "MadeBy")
                        .WithMany()
                        .HasForeignKey("MadeById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Kontecg.WorkRelations.EmploymentDocument", "Previous")
                        .WithMany("Children")
                        .HasForeignKey("PreviousId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Kontecg.Identity.SignOnDocument", "ReviewedBy")
                        .WithMany()
                        .HasForeignKey("ReviewedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Kontecg.WorkRelations.EmploymentSummary", "Summary")
                        .WithMany()
                        .HasForeignKey("SummaryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.Timing.WorkShift", "WorkShift")
                        .WithMany()
                        .HasForeignKey("WorkShiftId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("MadeBy");

                    b.Navigation("Previous");

                    b.Navigation("ReviewedBy");

                    b.Navigation("Summary");

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.EmploymentDocumentToGenerate", b =>
                {
                    b.HasOne("Kontecg.WorkRelations.EmploymentDocument", "EmploymentDocument")
                        .WithMany()
                        .HasForeignKey("EmploymentDocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.WorkRelations.EmploymentDocument", "NextEmploymentDocument")
                        .WithMany()
                        .HasForeignKey("NextEmploymentDocumentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("EmploymentDocument");

                    b.Navigation("NextEmploymentDocument");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.EmploymentPlus", b =>
                {
                    b.HasOne("Kontecg.WorkRelations.EmploymentDocument", "Employment")
                        .WithMany("Plus")
                        .HasForeignKey("EmploymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kontecg.Salary.PlusDefinition", "PlusDefinition")
                        .WithMany()
                        .HasForeignKey("PlusDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employment");

                    b.Navigation("PlusDefinition");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.EmploymentSummary", b =>
                {
                    b.HasOne("Kontecg.WorkRelations.EmploymentSummary", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.PerformanceEvaluation", b =>
                {
                    b.HasOne("Kontecg.WorkRelations.PerformanceDocument", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.WorkRelations.EmploymentDocument", "Employment")
                        .WithMany()
                        .HasForeignKey("EmploymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.WorkRelations.PerformanceSummary", "Summary")
                        .WithMany()
                        .HasForeignKey("SummaryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Document");

                    b.Navigation("Employment");

                    b.Navigation("Summary");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.PerformanceEvaluationLawPenalty", b =>
                {
                    b.HasOne("Kontecg.WorkRelations.PerformanceEvaluation", "Evaluation")
                        .WithMany("LawPenalties")
                        .HasForeignKey("EvaluationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kontecg.HumanResources.PersonLawPenalty", "LawPenalty")
                        .WithMany()
                        .HasForeignKey("LawPenaltyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Evaluation");

                    b.Navigation("LawPenalty");
                });

            modelBuilder.Entity("Kontecg.Holidays.HolidayDocument", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("Kontecg.Organizations.Occupation", b =>
                {
                    b.Navigation("Requirements");
                });

            modelBuilder.Entity("Kontecg.Organizations.Template", b =>
                {
                    b.Navigation("JobPositions");
                });

            modelBuilder.Entity("Kontecg.Organizations.TemplateDocument", b =>
                {
                    b.Navigation("Templates");
                });

            modelBuilder.Entity("Kontecg.Salary.TimeDistribution", b =>
                {
                    b.Navigation("Plus");
                });

            modelBuilder.Entity("Kontecg.SocialSecurity.SubsidyDocument", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.EmploymentDocument", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Plus");
                });

            modelBuilder.Entity("Kontecg.WorkRelations.PerformanceEvaluation", b =>
                {
                    b.Navigation("LawPenalties");
                });
#pragma warning restore 612, 618
        }
    }
}
